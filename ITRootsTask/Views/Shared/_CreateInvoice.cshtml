@model ITRootsTask.Models.Invoice

<div class="col-md-7 bg-light p-4 rounded mb-5 mt-3">
    <div class="card text-center">
        <div class="card-header">
            <h3>New Invoice</h3>
        </div>
        <div class="card-body">
            <form asp-action="CreateInvoicePartial">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group mb-3">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" id="invoiceName" class="form-control" placeholder="Invoice Name" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                    <button id="btnAdd" type="button" class="btn btn-outline-secondary align-items-end mt-3"><span>Add Row  </span><i class="fa fa-plus " aria-hidden="true"></i> </button>
                </div>
                <hr />
                <div>
                    <div class="form-group row mb-3" id="inputFields">
                        <label for="label1" class="col-sm-2 col-form-label">product 1</label>
                        <div class="col-sm-10 d-flex" >
                            <input type="text" class="form-control mr-2" id="name1" placeholder="name">
                            <input type="text" class="form-control mr-2" id="quantity1" placeholder="quantity">
                            <input type="text" class="form-control" id="price1" placeholder="price">
                        </div>
                    </div>
                </div>
                <br />
                <div class="form-group mb-3">
                    <button id="btnCreateInvoice" type="button" class="btn btn-primary">Create</button>
                </div>
            </form>
        </div>
    </div>
</div>


<div>
    <a asp-action="Index">Collapse View</a>
</div>

<hr />
<script>
    class Invoice {
        constructor(name, products) {
            this.name = name;
            this.products = products;
        }
    }

    class Product {
        constructor(id, productName, quantity, price) {
            this.id = id;
            this.productName = productName;
            this.quantity = quantity;
            this.price = price;
        }
    }

    $(document).ready(function () {

        const inputFields = document.getElementById('inputFields');

        let counter = 2;
        $('#btnAdd').click(function (event) {
            const newInputs = document.createElement('div');
            newInputs.classList.add('form-group', 'row', 'mb-3');
            newInputs.innerHTML = `
            <label for="label${counter}" class="col-sm-2 col-form-label">product ${counter}</label>
            <div class="col-sm-10 d-flex">
              <input type="text" class="form-control mr-2" id="name${counter}" placeholder="name">
              <input type="text" class="form-control mr-2" id="quantity${counter}" placeholder="quantity">
              <input type="text" class="form-control" id="price${counter}" placeholder="price">
                  </div>

          `;
            inputFields.appendChild(newInputs);
            counter++;
        });

        $('#btnCreateInvoice').click(function (event) {
            const products=[] ;
            for (let i = 1; i < counter; i++) {
                let productName = $(`#name${i}`).val();
                let productQuantity = $(`#quantity${i}`).val();
                let productPrice = $(`#price${i}`).val();
                let product = new Product(i, productName, productQuantity, productPrice);
                products.push(product);
            }
            let invoicename = $('#invoiceName').val();
            const myinvoice = new Invoice(invoicename, products);

            console.log(myinvoice);
            
            // Send the invoice object to the server using AJAX
            $.ajax({
                url: '/Invoice/CreateNewInvoice', 
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(myinvoice),
                success: function (result) {
                    console.log('Invoice created successfully!');
                    
                },
                error: function (xhr, status, error) {
                    console.log('Error creating invoice: ' + error);
                   
                }
            });

        });
  
    });
</script>
